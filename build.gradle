/*
 * Copyright OpenSearch Contributors
 * SPDX-License-Identifier: Apache-2.0
 */

buildscript {
    apply from: 'build-tools/repositories.gradle'

    ext {
        opensearch_version = System.getProperty("opensearch.version", "1.3.0-SNAPSHOT")
        // 1.0.0 -> 1.0.0.0, and 1.0.0-SNAPSHOT -> 1.0.0.0-SNAPSHOT
        opensearch_build = opensearch_version.replaceAll(/(\.\d)([^\d]*)$/, '$1.0$2')
        common_utils_version = System.getProperty("common_utils.version", opensearch_build)
        kotlin_version = '1.3.72'
    }

    repositories {
        mavenLocal()
        maven { url "https://aws.oss.sonatype.org/content/repositories/snapshots" }
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        jcenter()
    }
    dependencies {
        classpath "org.opensearch.gradle:build-tools:${opensearch_version}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlin_version}"
    }
}

plugins {
    id 'nebula.ospackage' version "8.3.0" apply false
    id "com.dorongold.task-tree" version "1.5"
}

apply plugin: 'base'
apply plugin: 'jacoco'
apply from: 'build-tools/merged-coverage.gradle'

configurations {
    ktlint
}

dependencies {
    add("ktlint", "com.pinterest:ktlint:0.41.0") {
        attributes {
            attribute(Bundling.BUNDLING_ATTRIBUTE, objects.named(Bundling, Bundling.EXTERNAL))
        }
    }
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "alerting/**/*.kt", "elastic-api/**/*.kt", "core/**/*.kt"
}

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "-F", "alerting/**/*.kt", "elastic-api/**/*.kt", "core/**/*.kt"
}

check.dependsOn ktlint

ext {
    isSnapshot = "true" == System.getProperty("build.snapshot", "true")
}

allprojects {
    group = "org.opensearch"
    version = "${opensearch_version}" - "-SNAPSHOT" + ".0"
    if (isSnapshot) {
        version += "-SNAPSHOT"
    }

    apply from: "$rootDir/build-tools/repositories.gradle"

    plugins.withId('java') {
        sourceCompatibility = targetCompatibility = "1.8"
    }
    plugins.withId('org.jetbrains.kotlin.jvm') {
        compileKotlin.kotlinOptions.jvmTarget = compileTestKotlin.kotlinOptions.jvmTarget = "1.8"
        compileKotlin.dependsOn ktlint
    }

    // Force certain dependencies here so they reflect across all sub-projects
    configurations.all {
        if (it.state != Configuration.State.UNRESOLVED) return
        resolutionStrategy {
            force "com.google.guava:guava:30.0-jre"
            force "commons-codec:commons-codec:1.13"
            force "junit:junit:4.13.1"
            force "org.apache.httpcomponents:httpclient:4.5.13"
        }
    }

}

evaluationDependsOnChildren()

check.dependsOn subprojects*.check
